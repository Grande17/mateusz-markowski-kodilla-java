create database kodilla_course;

show DATABASES;

create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';

GRANT ALL PRIVILEGES ON kodilla_course.* to kodilla_user;

show TABLES;

CREATE TABLE USERS
(
    ID   SERIAL PRIMARY KEY,
    FIRSTNAME   VARCHAR(100),
    LASTNAME VARCHAR(100)
    );
CREATE TABLE POSTS
(
    ID  SERIAL PRIMARY KEY,
    USER_ID  BIGINT UNSIGNED NOT NULL,
    BODY   VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);
SELECT*FROM USERS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John','Smith');
COMMIT;

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'This is my first post on this forum!');

COMMIT;

SELECT * FROM POSTS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;

CREATE TABLE ISSUESLISTS
(
    ID   SERIAL PRIMARY KEY,
    NAME   VARCHAR(100)
);
SELECT*FROM ISSUESLISTS;

INSERT INTO ISSUESLISTS(ID,NAME)
VALUES (1,'To do');

INSERT INTO ISSUESLISTS(ID,NAME)
VALUES (2,'In Progress');

INSERT INTO ISSUESLISTS(ID,NAME)
VALUES (3,'Done');

COMMIT ;

CREATE TABLE ISSUES
(
    ID  SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED,
    SUMMARY   VARCHAR(50),
    DESCRIPTION VARCHAR(50),
    USER_ID_ASSIGNEDTO BIGINT UNSIGNED,
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);
SELECT*FROM ISSUES;

INSERT INTO ISSUES(ID,ISSUESLIST_ID,SUMMARY,DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (1,1,'Task ToDo 1','Need to be done 1',1);

INSERT INTO ISSUES(ID,ISSUESLIST_ID,SUMMARY,DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (2,1,'Task ToDo 2','Need to be done 2',2);

INSERT INTO ISSUES(ID,ISSUESLIST_ID,SUMMARY,DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (3,1,'Task ToDo 3','Need to be done 3',3);

INSERT INTO ISSUES(ID,ISSUESLIST_ID,SUMMARY,DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (4,1,'Task ToDo 4','Need to be done 4',4);

INSERT INTO ISSUES(ID,ISSUESLIST_ID,SUMMARY,DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (5,1,'Task ToDo 5','Need to be done 5',5);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (6,2,'Task in progress 1','In progress 1',1);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (7,2,'Task in progress 2','In progress 2',2);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (8,2,'Task in progress 3','In progress 3',3);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (9,2,'Task in progress 4','In progress 4',4);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES (10,2,'Task in progress 5','In progress 5',5);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES  (11,3,'Done tasks 1','Done 1',1);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES  (12,3,'Done tasks 2','Done 2',2);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES  (13,3,'Done tasks 3','Done 3',3);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES  (14,3,'Done tasks 4','Done 4',4);

INSERT INTO ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO)
VALUES  (15,3,'Done tasks 5','Done 5',5);

COMMIT;

SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
JOIN POSTS P ON U.ID = P.USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1
ORDER BY U.LASTNAME, U.FIRSTNAME;



SELECT IL.NAME AS TASK_LIST_NAME, I.SUMMARY AS TASK
FROM ISSUESLISTS IL
JOIN ISSUES I on IL.ID = I.ISSUESLIST_ID;

SELECT I.SUMMARY AS TASK_NAME, U.FIRSTNAME,U.LASTNAME
FROM ISSUES I
JOIN USERS U on I.USER_ID_ASSIGNEDTO = U.ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS TASKS_NUMBER
FROM USERS U  JOIN ISSUES I on U.ID = I.USER_ID_ASSIGNEDTO
GROUP BY I.USER_ID_ASSIGNEDTO
HAVING COUNT(*) > 0
ORDER BY U.LASTNAME;


